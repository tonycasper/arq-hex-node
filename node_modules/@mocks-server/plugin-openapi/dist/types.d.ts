import { MOCKS_SERVER_ROUTE_ID, MOCKS_SERVER_VARIANT_ID } from "./constants";
import type { OpenAPIV3 as OriginalOpenApiV3 } from "openapi-types";
export declare namespace OpenAPIV3 {
    interface ResponseObject extends OriginalOpenApiV3.ResponseObject {
        [MOCKS_SERVER_VARIANT_ID]?: string;
    }
    interface ExampleObject extends OriginalOpenApiV3.ExampleObject {
        [MOCKS_SERVER_VARIANT_ID]?: string;
    }
    interface ResponsesObject extends OriginalOpenApiV3.ResponsesObject {
    }
    interface MediaTypeObject extends OriginalOpenApiV3.MediaTypeObject {
    }
    interface PathItemObject extends OriginalOpenApiV3.PathItemObject {
    }
    type ResponseHeaders = ResponseObject["headers"];
    interface OperationObject extends OriginalOpenApiV3.OperationObject {
        [MOCKS_SERVER_ROUTE_ID]?: string;
    }
    type Document = OriginalOpenApiV3.Document<{
        [MOCKS_SERVER_VARIANT_ID]?: string;
        [MOCKS_SERVER_ROUTE_ID]?: string;
    }>;
}
export declare namespace OpenApiDefinition {
    interface Options {
        defaultLocation?: string;
        alerts?: any;
        logger?: any;
    }
    interface Collection {
        id: string;
        from?: string;
    }
    interface Refs {
        location?: string;
        subDocPath?: string;
    }
    interface Definition {
        basePath: string;
        refs?: Refs;
        collection?: Collection;
        document: OpenAPIV3.Document;
    }
}
